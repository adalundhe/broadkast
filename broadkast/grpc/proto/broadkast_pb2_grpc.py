# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from .broadkast_pb2 import(
    KubeConfigUpdate,
    KubeConfigUpdateResponse,
    ServiceDiscoveryRequest,
    ServiceDiscoveryResponse
)


class BroadkastServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateClusterConfig = channel.unary_unary(
                '/BroadkastServer/UpdateClusterConfig',
                request_serializer=KubeConfigUpdate.SerializeToString,
                response_deserializer=KubeConfigUpdateResponse.FromString,
                )
        self.DiscoverService = channel.unary_unary(
                '/BroadkastServer/DiscoverService',
                request_serializer=ServiceDiscoveryRequest.SerializeToString,
                response_deserializer=ServiceDiscoveryResponse.FromString,
                )


class BroadkastServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateClusterConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DiscoverService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BroadkastServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateClusterConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClusterConfig,
                    request_deserializer=KubeConfigUpdate.FromString,
                    response_serializer=KubeConfigUpdateResponse.SerializeToString,
            ),
            'DiscoverService': grpc.unary_unary_rpc_method_handler(
                    servicer.DiscoverService,
                    request_deserializer=ServiceDiscoveryRequest.FromString,
                    response_serializer=ServiceDiscoveryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BroadkastServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BroadkastServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateClusterConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BroadkastServer/UpdateClusterConfig',
            KubeConfigUpdate.SerializeToString,
            KubeConfigUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DiscoverService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BroadkastServer/DiscoverService',
            ServiceDiscoveryRequest.SerializeToString,
            ServiceDiscoveryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
